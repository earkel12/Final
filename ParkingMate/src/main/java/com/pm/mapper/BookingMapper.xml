<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pm.mapper.BookingMapper">
	<!-- mybatis설정 -->


	<insert id="insertBooking"
		parameterType="com.pm.booking.model.BookingDTO">
		INSERT INTO booking (bookingdate, bookingcarnum, intime,
		outtime, valet,
		instand, price, status, obstacle, idx, id, ulatitude,
		ulongitude)
		VALUES (#{bookingdate}, #{bookingcarnum}, null, null,
		#{valet}, #{instand}, #{price}, #{status}, #{obstacle},
		#{idx}, #{id},
		#{ulatitude}, #{ulongitude})
	</insert>
	
	<select id="carbyid" parameterType="String"
		resultType="com.pm.booking.model.UserCarDTO">
		SELECT uc.car_num, uc.modelname
		FROM user_cars uc
		WHERE uc.id
		= #{id}
		AND NOT EXISTS (
		SELECT 1
		FROM booking b
		WHERE b.bookingcarnum =
		uc.car_num
		AND b.status != '전체결제완료'
		AND b.status != '예약접수'
		);


	</select>
	<update id="updateStatus" parameterType="String">
		UPDATE booking
		JOIN (
		SELECT bookingnum
		FROM (
		SELECT bookingnum
		FROM booking
		WHERE id = #{id}
		ORDER BY bookingnum DESC
		LIMIT 1
		) AS sub
		) AS sub2
		ON booking.bookingnum
		= sub2.bookingnum
		SET
		booking.status = '파킹메이트결제완료'
	</update>
	<!-- 0원결제쿼리문 추가 후 설정 시 파킹메이트결제관련 상태변경불가하여 쿼리문및 파라미터타입 변경 -->
	<update id="finalupdateStatus" parameterType="String">
  	<!--  UPDATE booking
		JOIN (
		SELECT bookingnum
		FROM (
		SELECT bookingnum
		FROM booking
		WHERE id = #{id}
		ORDER BY bookingnum DESC
		LIMIT 1
		) AS sub
		) AS sub2
		ON booking.bookingnum
		= sub2.bookingnum
		SET
		booking.status = '주차장결제완료' -->
		update
			booking
    	set
    		status = '주차장결제완료'
    	where
    		id = #{id}
      	and bookingcarnum = #{bookingcarnum}
      	and status != '주차장결제완료';
	</update>
	
	<select id="bookingCount" parameterType="Integer" resultType="Integer">
		select count(*) from booking where idx = #{idx} AND status != '예약접수'
	</select>
	
	
	
	
	
	<!--0원이여도 결제완료상태 변경  -->
	<select id="getBookingPriceById" parameterType="String" resultType="int">
    	select
    		price
    	from
    		booking
    	where id = #{id}
    	and bookingcarnum = #{bookingcarnum}
    	for update;
	</select>
	<update id="updateBookingStatusIfPriceZero" parameterType="map">
    update
    	booking
    set
    	status = '주차장결제완료'
    where
    	id = #{id}
    and bookingcarnum = #{bookingcarnum}
    and price = 0
    and status != '주차장결제완료'
	</update>
	<!-- 메이트이용현황관련(사용자입장) -->
	<!-- 예약접수된 유저차량번호 리스트조회 -->
	<select id="findBookingCarNumByUser" parameterType="String" resultType="String">
		select
			distinct bookingcarnum
		from
			booking
		where
			id = #{id}
		and status != '주차장결제완료'
	</select>
	<!-- 차량번호별 내용조회 -->
	<select id="findBookingInfoByCarNum" parameterType="String" resultType="map">
		select
        	a.*,
        	b.name AS parkinglot_name
    	from
        	booking a
    	join
        	parkinglot b
    	on
        	a.idx = b.idx
    	where
        	a.id = #{id}
    	and a.bookingcarnum = #{bookingcarnum}
	</select>
	<!--차량번호별 내용조회 보완  -->
	<select id="findBookingInfoByCarNumWithEndtime" parameterType="map" resultType="map">
    SELECT
        b.*,
        p.name AS parkinglot_name,
        COALESCE(b.intime, mp.endtime) AS display_intime
    FROM
        booking b
    JOIN
        parkinglot p ON b.idx = p.idx
    LEFT JOIN
        mate_paycheck mp ON b.bookingcarnum = mp.car_num AND b.id = mp.id
    WHERE
        b.id = #{id}
        AND b.bookingcarnum = #{bookingcarnum}
	</select>

	<!-- 메이트이용현황관련 -->
	<resultMap id="BookingParkingMap"
		type="com.pm.booking.model.BookingParkingDTO">
		<id property="bookingnum" column="bookingnum" />
		<result property="bookingdate" column="bookingdate" />
		<result property="bookingcarnum" column="bookingcarnum" />
		<result property="intime" column="intime" />
		<result property="outtime" column="outtime" />
		<result property="valet" column="valet" />
		<result property="instand" column="instand" />
		<result property="price" column="price" />
		<result property="status" column="status" />
		<result property="obstacle" column="obstacle" />
		<result property="idx" column="idx" />
		<result property="id" column="id" />
		<result property="ulatitude" column="ulatitude" />
		<result property="ulongitude" column="ulongitude" />
		<result property="pmlatitude" column="pmlatitude" />
		<result property="pmlongitude" column="pmlongitude" />

		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="name" column="name" />
		<result property="addr" column="addr" />

		<result property="lotIdx" column="lot_idx" />
		<result property="lotName" column="name" />
		<result property="lotAddr" column="addr" />
		<result property="lotType" column="type" />
		<result property="lotPrice" column="lot_price" />
	</resultMap>

	<select id="selectActiveInstadBookings"
		resultMap="BookingParkingMap">
		SELECT b.*, p.idx AS lot_idx, p.name, p.addr, p.type,
		p.price
		FROM booking b
		JOIN parkinglot p ON b.idx = p.idx
		WHERE b.instand
		= 1
		AND b.status = '파킹메이트결제완료'
		ORDER BY b.bookingdate DESC
	</select>

	<select id="getBookingParkingListByMateId"
		resultType="com.pm.booking.model.BookingParkingDTO">
		SELECT m.*, b.*, pl.*
		FROM mate_paycheck m
		JOIN booking b ON
		m.car_num = b.bookingcarnum
		JOIN parkinglot pl ON b.idx = pl.idx
		WHERE
		m.mid = #{mateId} AND m.status = '정산대기';
	</select>

	<update id="updateStatusToReserved">
		UPDATE booking
		SET status = '파킹메이트매칭완료'
		WHERE
		bookingnum = #{bookingnum}
	</update>

	<select id="getBookingByNum"
		resultType="com.pm.booking.model.BookingDTO">
		SELECT * FROM booking WHERE bookingnum = #{bookingnum}
	</select>

    
  <!-- 주차장정보 가져오기 -->
	<select id="findParkinglotByName" parameterType="String" resultType="com.pm.map.model.ParkingLotDTO">
		select
		*
		from
		parkinglot
		where
		name = #{name}
	</select>

	<!-- 메이트이용 시 매칭된 메이트정보 가져오기 -->
	<select id="findMatcingMate" resultType="map">
		select
		m1.*,
		m2.name AS
		mate_name,
		m2.tel AS mate_tel
		from
		mate_paycheck m1
		join
		user m2
		on
		m1.mid =
		m2.id
		where
		m1.id = #{id}
		and m1.mid is not null
		and m1.car_num = #{car_num}
		and m2.mate_use = 1
	</select>
	
	<update id="updateStartTimePaycheck">
		UPDATE mate_paycheck
		SET starttime = NOW()
		WHERE car_num = (
        SELECT bookingcarnum FROM booking WHERE bookingnum = #{bookingnum}
    	)
	</update>
	
	<!-- 주차장만 이용 시 입차시간 업데이트 -->
	<update id="updateIntime" parameterType="int">
    	update
    		booking
    	SET
    		intime = NOW()
    	WHERE
    		bookingnum = #{bookingnum}
	</update>
    
	<!-- 출차관련 요금계산 정보조회 -->
	<select id="findIntimeAndPrice2" parameterType="int">
		select
			a.intime,
			a.price,
			b.price2
		from
			booking a
		join
			parkinglot b
		on
			a.idx = b.idx
		where
			a.bookingnum = #{bookingnum}
	</select>
    
	<!-- 주차장이용과 주차+메이트이용관련 출차시간 업데이트 -->
	<update id="updateOuttime" parameterType="map">
    	update
    		booking
    	SET
    		outtime = NOW(),
    		price = #{price}
    	WHERE
    		bookingnum = #{bookingnum}
	</update>

</mapper>